# 실습) 장보기
# 마트진열대에 있는 과일 중 마음에 드는 3가지를 장바구니에 담아서 장바구니를 print해주세요
마트_진열대 = [
    ["사과", "배"],
    ["바나나", "망고"],
    ["딸기", "체리"],
]
# 장바구니 = []
# 장바구니.append(마트_진열대[0][0])
# 장바구니.append(마트_진열대[1][0])
# 장바구니.append(마트_진열대[2][0])
# print(장바구니)
#
# # 실습) 상한음식 버리기
# # 냉장고에 있는 상한 음식을 모두 버리고, 버린 자리에 다시 새 제품을 넣어서 냉장고를 print해주세요
# 우유(상함) -> 우유
# 조건) 냉장고[1] = "우유" , 냉장고[4] = "치즈"

냉장고 = ["계란", "우유(상함)", "김치", "사과", "치즈(상함)", "콩나물"]

냉장고.pop(1)
냉장고.insert(1, "우유")
냉장고.pop(4)
냉장고.insert(4, "치즈")
print(냉장고)

# index()
# 복습) 문자열에서는 특정 문자들이 존재하는지 검사하는건 find() 였습니다.
인삿말 = "안녕하세요"
안녕_위치 = 인삿말.find("하세요")
print(안녕_위치)
안녕_위치 = 인삿말.index("하세요")
print(안녕_위치)
# 문자열에서 find와 index의 차이는 찾지 못했을때 find는 -1을 반환. index는 오류반환
# 리스트에는 find는 없고, index만 있음

냉장고 = ["계란", "우유(상함)", "김치", "사과", "치즈(상함)", "된장국"]
냉장고[냉장고.index("우유(상함)")] = "우유"
냉장고[냉장고.index("치즈(상함)")] = "치즈"

# 슬라이싱 대입(리스트에만 존재하는 방법)
# 변칙적인 기능이라 헷갈릴 수 있습니다. 설명이랑 소개만 해드릴게요.
# 모르셔도 됩니다. 알고 있으면 편한 상황이 많음

부산지하철 = ["부산역", "범일", "범내골", "서면", "연산"]
부산역과_범일_사이 = ["초량", "부산진", "좌천"]
서면과_연산_사이 = ["부전", "양정", "시청"]

부산지하철[1:1] = 부산역과_범일_사이
print(부산지하철)

서면_위치 = 부산지하철.index("서면")
부산지하철[서면_위치 + 1 : 서면_위치 + 1] = 서면과_연산_사이
print(부산지하철)

# 특정 구간 요소들 치환(대체) 가능
숫자들 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
숫자들[1:4] = [-1, -2, -3]  # 1,2,3 -> -1,-2,-3
print(숫자들)

# 삭제도 가능(빈배열 치환)
숫자들[1:4] = []
print(숫자들)

# 정렬
숫자들.sort(reverse=True)  # 내림차순 정렬
print(숫자들)
숫자들.sort()  # 오름차순 정렬
print(숫자들)

#### 복습 예제 ####

# 주문 금액 입력
# 15000원 이상시 1000원할인 혹은 8퍼 할인
price = int("15000")

# 15000원 이상일 경우 할인 계산
if price >= 15000:
    discount_8_percent = price * 0.08
    discount_1000 = 1000

    # 더 큰 할인 선택
    if discount_8_percent > discount_1000:
        final_price = price - discount_8_percent
    else:
        final_price = price - discount_1000
else:
    # 15000원 미만은 할인 없음
    final_price = price

# 결과 출력
print(int(final_price))
